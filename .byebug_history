c
cont == 4 ? message += '.' : message += ', '
message += "#{temp}°C em #{date}"
date = convert_date(daily['dt'])
temp = daily['temp']['day']
cont
exit
"#{current_temp}°C e #{current_weather} em #{@city} em #{current_date}. Média para os próximos dias: " + second_message(json)
c
"#{current_temp}°C e #{current_weather} em #{@city} em #{current_date}. Média para os próximos dias: " + second_message(json)
second_message(json)
exit
eexit
continue
second_message(json)
c
message
c
message
c
message = ''
message += "#{temp}°C em #{date}"
message
convert_date(daily['dt'])
daily['temp']['day']
c
next
c
continue
message = create_message(json)
c
json['current']['dt'].to_s
json['current']['dt']
convert_date(json['current']['dt'])
json
message = create_message(json)
continue
create_message(json)
message << create_message(json)
c
message << create_message(json)
json = JSON.parse(resp.body)
resp = RestClient.get complete_url
c
Message.new
Message
message = ::Message.new(json, @city)
message = :Message.new(json, @city)
message = Message.new(json, @city)
json = JSON.parse(resp.body)
resp = RestClient.get complete_url
c
next
c
a.each { |daily| puts("#{daily['temp']['day']} em #{daily['dt']}") }c
a.each { |daily| puts("#{daily['temp']['day']} em #{daily['dt']}") }
a.each { |daily| puts(daily['temp']['day']) }
a.each { |daily| puts(daily['temp]['day']) }
a.each { |a| puts(a['temp']['day']) }
a.each { |a| puts(a['temp]['day']) }
a.each { |a| puts(a) }
a.each |a| puts(a)
a.each |a| puts a
a.each |a| a
a.each
a
a.each |value| puts value['temp]['day']
a.each |value| puts {value['temp]['day']
a.each |value| puts "#{value['temp]['day']}"
a.each { |value| puts "#{value['temp]['day']}" 
a.each { |value| puts "#{value['temp]['day']}" }}
a.each { |value| puts "#{value['temp]['day']}" }
a.each { |value| puts value['temp]['day'] }
a.each do |value|
a.each { |value| puts value['temp]['day'] }
a.each { |value| puts value['temp]['day']
a.first['temp']['day']
a.first['temp'].first
a.first['temp']
a.first
a = json['daily']
json['daily'].count
json['daily']
a['daily']
a.first['description']
a.first
a.each { |valor| puts "#{valor} haha" }
a.each { |valor| "#{valor} haha" }
a.each { |valor| valor }
a.each { |valor| valor if valor == 'description' }
a
a[2]
a['description']
a = json['current']['weather']
json['current']['weather']
json['current']['weather']['description']
json['current']['weather'][2]
json['current']['weather'][3]
json['current']
json.each { |chave, valor| puts "chave: #{chave}, valor: #{valor}" if chave == 'dt' }
json.each { |chave, valor| puts "chave: #{chave}, valor: #{valor}" }
json.each { |chave, valor| puts "chave: #{chave}, valor: #{valor} }
a.class
a['description']
a
a = json['current']['weather']
b = json['current']['weather']
json['current']['weather']
json['current']['weather']['description']
json['current']
json['current']['temp']
json['daily']
json['daily']['dt']
json['daily'].count
json['daily']
json['current']['temp']
json['current']
json['current']['weather']
json['current']['weather']['description']
json['current']
json['daily']
json = JSON.parse(resp.body)
resp = RestClient.get complete_url
b = json.delete['timezone_offset']
i = json.delete['timezone_offset']
json.keys
json.keys['daily']
json.keys
json = JSON.parse(resp.body)
resp = RestClient.get complete_url
json.first
json.size
json.has_key?(:dt)
json.has_key?(:current)
json.current
json.dt
json.each{ |data| puts data.dt }
json
json = JSON.parse(resp.body)
resp
resp = RestClient.get complete_url
ENV['GEOCODER_KEY']
Env['DESKTOP_SESSION']
continue
Env['DESKTOP_SESSION']
ENV
ENV['GEOCODER_KEY']
require 'env'
ENV['GEOCODER_KEY']
continue
Rails.env
ENV['GEOCODER_KEY']
ENV.count
ENV
ENV["GEOCODER_KEY"]
c
C
ENV["GEOCODER_KEY"]
ENV['GEOCODER_KEY']
ENV['OPEN_WEATHER_FORECAST_KEY']
ENV.OPEN_WEATHER_FORECAST_KEY
ENV
continue
resp = RestClient.get complete_url
complete_url
c
resp = RestClient.get complete_url
c
resp = RestClient.get complete_url
c
resp = RestClient.get complete_url
c
resp = RestClient.get complete_url(@city)
c
complete_url
